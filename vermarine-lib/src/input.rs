use tetra::input::Key;
use std::collections::HashMap;

#[derive(Hash, Eq, PartialEq, Debug, Clone)]
pub enum InputAction {
    Pressed(Input),
    Released(Input),
    Held(Input)
}

#[derive(Hash, Eq, PartialEq, Debug, Clone)]
pub enum Input {
    KeyA,
    KeyB,
    KeyC,
    KeyD,
    KeyE,
    KeyF,
    KeyG,
    KeyH,
    KeyI,
    KeyJ,
    KeyK,
    KeyL,
    KeyM,
    KeyN,
    KeyO,
    KeyP,
    KeyQ,
    KeyR,
    KeyS,
    KeyT,
    KeyU,
    KeyV,
    KeyW,
    KeyX,
    KeyY,
    KeyZ,
    KeyNum0,
    KeyNum1,
    KeyNum2,
    KeyNum3,
    KeyNum4,
    KeyNum5,
    KeyNum6,
    KeyNum7,
    KeyNum8,
    KeyNum9,
    KeyF1,
    KeyF2,
    KeyF3,
    KeyF4,
    KeyF5,
    KeyF6,
    KeyF7,
    KeyF8,
    KeyF9,
    KeyF10,
    KeyF11,
    KeyF12,
    KeyF13,
    KeyF14,
    KeyF15,
    KeyF16,
    KeyF17,
    KeyF18,
    KeyF19,
    KeyF20,
    KeyF21,
    KeyF22,
    KeyF23,
    KeyF24,
    KeyNumLock,
    KeyNumPad1,
    KeyNumPad2,
    KeyNumPad3,
    KeyNumPad4,
    KeyNumPad5,
    KeyNumPad6,
    KeyNumPad7,
    KeyNumPad8,
    KeyNumPad9,
    KeyNumPad0,
    KeyNumPadPlus,
    KeyNumPadMinus,
    KeyNumPadMultiply,
    KeyNumPadDivide,
    KeyNumPadEnter,
    KeyLeftCtrl,
    KeyLeftShift,
    KeyLeftAlt,
    KeyRightCtrl,
    KeyRightShift,
    KeyRightAlt,
    KeyUp,
    KeyDown,
    KeyLeft,
    KeyRight,
    KeyAmpersand,
    KeyAsterisk,
    KeyAt,
    KeyBackquote,
    KeyBackslash,
    KeyBackspace,
    KeyCapsLock,
    KeyCaret,
    KeyColon,
    KeyComma,
    KeyDelete,
    KeyDollar,
    KeyDoubleQuote,
    KeyEnd,
    KeyEnter,
    KeyEquals,
    KeyEscape,
    KeyExclaim,
    KeyGreaterThan,
    KeyHash,
    KeyHome,
    KeyInsert,
    KeyLeftBracket,
    KeyLeftParen,
    KeyLessThan,
    KeyMinus,
    KeyPageDown,
    KeyPageUp,
    KeyPause,
    KeyPercent,
    KeyPeriod,
    KeyPlus,
    KeyPrintScreen,
    KeyQuestion,
    KeyQuote,
    KeyRightBracket,
    KeyRightParen,
    KeyScrollLock,
    KeySemicolon,
    KeySlash,
    KeySpace,
    KeyTab,
    KeyUnderscore,
    MouseLeft,
    MouseRight,
    MouseMiddle,
    MouseX1,
    MouseX2,
}

impl Input {
    pub(crate) fn from_tetra_key(key :Key) -> Input {
        use Input::*;
        match key {
            Key::A => KeyA,
            Key::B => KeyB,
            Key::C => KeyC,
            Key::D => KeyD,
            Key::E => KeyE,
            Key::F => KeyF,
            Key::G => KeyG,
            Key::H => KeyH,
            Key::I => KeyI,
            Key::J => KeyJ,
            Key::K => KeyK,
            Key::L => KeyL,
            Key::M => KeyM,
            Key::N => KeyN,
            Key::O => KeyO,
            Key::P => KeyP,
            Key::Q => KeyQ,
            Key::R => KeyR,
            Key::S => KeyS,
            Key::T => KeyT,
            Key::U => KeyU,
            Key::V => KeyV,
            Key::W => KeyW,
            Key::X => KeyX,
            Key::Y => KeyY,
            Key::Z => KeyZ,
            Key::Num0 => KeyNum0,
            Key::Num1 => KeyNum1,
            Key::Num2 => KeyNum2,
            Key::Num3 => KeyNum3,
            Key::Num4 => KeyNum4,
            Key::Num5 => KeyNum5,
            Key::Num6 => KeyNum6,
            Key::Num7 => KeyNum7,
            Key::Num8 => KeyNum8,
            Key::Num9 => KeyNum9,
            Key::F1 => KeyF1,
            Key::F2 => KeyF2,
            Key::F3 => KeyF3,
            Key::F4 => KeyF4,
            Key::F5 => KeyF5,
            Key::F6 => KeyF6,
            Key::F7 => KeyF7,
            Key::F8 => KeyF8,
            Key::F9 => KeyF9,
            Key::F10 => KeyF10,
            Key::F11 => KeyF11,
            Key::F12 => KeyF12,
            Key::F13 => KeyF13,
            Key::F14 => KeyF14,
            Key::F15 => KeyF15,
            Key::F16 => KeyF16,
            Key::F17 => KeyF17,
            Key::F18 => KeyF18,
            Key::F19 => KeyF19,
            Key::F20 => KeyF20,
            Key::F21 => KeyF21,
            Key::F22 => KeyF22,
            Key::F23 => KeyF23,
            Key::F24 => KeyF24,
            Key::NumLock => KeyNumLock,
            Key::NumPad1 => KeyNumPad1,
            Key::NumPad2 => KeyNumPad2,
            Key::NumPad3 => KeyNumPad3,
            Key::NumPad4 => KeyNumPad4,
            Key::NumPad5 => KeyNumPad5,
            Key::NumPad6 => KeyNumPad6,
            Key::NumPad7 => KeyNumPad7,
            Key::NumPad8 => KeyNumPad8,
            Key::NumPad9 => KeyNumPad9,
            Key::NumPad0 => KeyNumPad0,
            Key::NumPadPlus => KeyNumPadPlus,
            Key::NumPadMinus => KeyNumPadMinus,
            Key::NumPadMultiply => KeyNumPadMultiply,
            Key::NumPadDivide => KeyNumPadDivide,
            Key::NumPadEnter => KeyNumPadEnter,
            Key::LeftCtrl => KeyLeftCtrl,
            Key::LeftShift => KeyLeftShift,
            Key::LeftAlt => KeyLeftAlt,
            Key::RightCtrl => KeyRightCtrl,
            Key::RightShift => KeyRightShift,
            Key::RightAlt => KeyRightAlt,
            Key::Up => KeyUp,
            Key::Down => KeyDown,
            Key::Left => KeyLeft,
            Key::Right => KeyRight,
            Key::Ampersand => KeyAmpersand,
            Key::Asterisk => KeyAsterisk,
            Key::At => KeyAt,
            Key::Backquote => KeyBackquote,
            Key::Backslash => KeyBackslash,
            Key::Backspace => KeyBackspace,
            Key::CapsLock => KeyCapsLock,
            Key::Caret => KeyCaret,
            Key::Colon => KeyColon,
            Key::Comma => KeyComma,
            Key::Delete => KeyDelete,
            Key::Dollar => KeyDollar,
            Key::DoubleQuote => KeyDoubleQuote,
            Key::End => KeyEnd,
            Key::Enter => KeyEnter,
            Key::Equals => KeyEquals,
            Key::Escape => KeyEscape,
            Key::Exclaim => KeyExclaim,
            Key::GreaterThan => KeyGreaterThan,
            Key::Hash => KeyHash,
            Key::Home => KeyHome,
            Key::Insert => KeyInsert,
            Key::LeftBracket => KeyLeftBracket,
            Key::LeftParen => KeyLeftParen,
            Key::LessThan => KeyLessThan,
            Key::Minus => KeyMinus,
            Key::PageDown => KeyPageDown,
            Key::PageUp => KeyPageUp,
            Key::Pause => KeyPause,
            Key::Percent => KeyPercent,
            Key::Period => KeyPeriod,
            Key::Plus => KeyPlus,
            Key::PrintScreen => KeyPrintScreen,
            Key::Question => KeyQuestion,
            Key::Quote => KeyQuote,
            Key::RightBracket => KeyRightBracket,
            Key::RightParen => KeyRightParen,
            Key::ScrollLock => KeyScrollLock,
            Key::Semicolon => KeySemicolon,
            Key::Slash => KeySlash,
            Key::Space => KeySpace,
            Key::Tab => KeyTab,
            Key::Underscore => KeyUnderscore,
        }
    }
}

pub type Controls = HashMap<InputAction, &'static str>;
